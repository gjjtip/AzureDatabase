
import java.sql.Connection;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.DriverManager;

public class AppTest {

	// Connect to database
	static String hostName = "jaygong";
	static String dbName = "mySampleDatabase";
	static String user = "jayGong@jaygong";
	static String password = "***";
	static String url = String.format(
			"jdbc:sqlserver://%s.database.windows.net:1433;database=%s;user=%s;password=%s;encrypt=true;hostNameInCertificate=*.database.windows.net;loginTimeout=30;",
			hostName, dbName, user, password);
	static Connection connection = null;

	public static void main(String[] args) {

		query();
//		insert();
//		update();
//		delete();
	}

	public static void query() {
		try {
			connection = DriverManager.getConnection(url);
			String schema = connection.getSchema();
			System.out.println("Successful connection - Schema: " + schema);

			System.out.println("Query data example:");
			System.out.println("=========================================");

			// Create and execute a SELECT SQL statement.
			String selectSql = "SELECT TOP 20 pc.Name as CategoryName, p.name as ProductName "
					+ "FROM [SalesLT].[ProductCategory] pc "
					+ "JOIN [SalesLT].[Product] p ON pc.productcategoryid = p.productcategoryid ";

			try (Statement statement = connection.createStatement();
					ResultSet resultSet = statement.executeQuery(selectSql)) {

				// Print results from select statement
				System.out.println("Top 20 categories:");
				while (resultSet.next()) {
					System.out.println(resultSet.getString(1) + " " + resultSet.getString(2));
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static void insert() {
		try {
			connection = DriverManager.getConnection(url);
			String schema = connection.getSchema();
			System.out.println("Successful connection - Schema: " + schema);

			System.out.println("Insert data example:");
			System.out.println("=========================================");

			// Prepared statement to insert data
			String insertSql = "INSERT INTO SalesLT.Product (Name, ProductNumber, Color, "
					+ " StandardCost, ListPrice, SellStartDate) VALUES (?,?,?,?,?,?);";

			java.util.Date date = new java.util.Date();
			java.sql.Timestamp sqlTimeStamp = new java.sql.Timestamp(date.getTime());

			try (PreparedStatement prep = connection.prepareStatement(insertSql)) {
				prep.setString(1, "BrandNewProduct");
				prep.setInt(2, 200989);
				prep.setString(3, "Blue");
				prep.setDouble(4, 75);
				prep.setDouble(5, 80);
				prep.setTimestamp(6, sqlTimeStamp);

				int count = prep.executeUpdate();
				System.out.println("Inserted: " + count + " row(s)");
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static void update() {
		try {
			connection = DriverManager.getConnection(url);
			String schema = connection.getSchema();
			System.out.println("Successful connection - Schema: " + schema);

			System.out.println("Update data example:");
			System.out.println("=========================================");

			// Prepared statement to update data
			String updateSql = "UPDATE SalesLT.Product SET ListPrice = ? WHERE Name = ?";

			try (PreparedStatement prep = connection.prepareStatement(updateSql)) {
				prep.setString(1, "500");
				prep.setString(2, "BrandNewProduct");

				int count = prep.executeUpdate();
				System.out.println("Updated: " + count + " row(s)");
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static void delete() {
		try {
			connection = DriverManager.getConnection(url);
			String schema = connection.getSchema();
			System.out.println("Successful connection - Schema: " + schema);

			System.out.println("Delete data example:");
			System.out.println("=========================================");

			// Prepared statement to delete data
			String deleteSql = "DELETE SalesLT.Product WHERE Name = ?";

			try (PreparedStatement prep = connection.prepareStatement(deleteSql)) {
				prep.setString(1, "BrandNewProduct");

				int count = prep.executeUpdate();
				System.out.println("Deleted: " + count + " row(s)");
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}
